# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type BlogPost {
  color: String!
  id: String!
  src: String!
  url: String!
}

type Build {
  date: String!
  id: String!
  log: String!
  status: BuildStatus!
}

"""State of building process"""
enum BuildStatus {
  DONE
  FAILURE
  PENDING
}

type Crop {
  anchor: Point!
  factor: Float!
}

input CropInput {
  anchor: PointInput!
  factor: Float!
}

type GalleryItem {
  color: String!
  height: Float!

  """id of product"""
  id: ID!
  src: String!
  width: Float!
}

type MultiLang {
  en: String
  ru: String
}

input MultiLangInput {
  en: String
  ru: String
}

type Mutation {
  publish: Build
  saveCrop(crop: CropInput!, id: ID!): Picture!
  saveGalleryOrder(list: [ID!]!): [GalleryItem!]!
  saveProduct(product: ProductInput!): Product
}

type Picture {
  color: String!
  crop: Crop!
  id: ID!
  inline: String!
  originalSize: Size!
  src: String!
}

type Point {
  x: Float!
  y: Float!
}

input PointInput {
  x: Float!
  y: Float!
}

type Product {
  cover: Picture
  description: MultiLang
  descriptionHTML: MultiLang!
  descriptionText: MultiLang!
  id: ID!
  pictures: [Picture!]!
  price: Float
  showInGallery: Boolean!
  showInShop: Boolean!
  state: State!
  title: MultiLang
}

input ProductInput {
  coverId: ID
  description: MultiLangInput
  id: ID!
  pictures: [ID!]!
  price: Float
  showInGallery: Boolean!
  showInShop: Boolean!
  state: State!
  title: MultiLangInput
}

type Query {
  blog: [BlogPost!]!
  currentBuild: Build
  gallery: [GalleryItem!]!
  isDraft: Boolean!
  picture(id: ID!): Picture!
  product(id: ID!): Product!
  products: [Product!]!
  publication(id: String!): Build
  publicationDuration: Float!
  publications: [Build!]!
  shop: [ShopItem!]!
  user: User!
}

type ShopItem {
  cover: Picture!
  description: MultiLang
  descriptionHTML: MultiLang!
  id: ID!
  pictures: [Picture!]!
  price: Float!
  title: MultiLang
}

type Size {
  height: Float!
  width: Float!
}

"""State of product"""
enum State {
  ARCHIVED
  DRAFT
  PUBLISHED
}

type User {
  email: String!
}
